openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Swagger RESTful PHP API"
  description: "PHP RESTful API with Swagger"
  license:
    name: MIT
    url: https://opensource.org/license/mit/
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nickname:
          type: string
    Security:
      type: object
      properties:
        nickname:
          type: string
        password:
          type: string
servers:
  - url: "http://localhost/PHP-API-Template/"
    description: "Chat API local"
  - url: "https://api.toolchain.tech/api/chat/v1/"
    description: "Chat API remote"
paths:
  /user/get_all:
    get:
      tags:
        - User
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
  /user/get_by_id:
    get:
      tags:
        - User
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
  /user/save_user:
    post:
      tags:
        - User
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
  /user/update_user:
    put:
      tags:
        - User
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
  /user/delete_user:
    delete:
      tags:
        - User
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
  /security/authenticate:
    post:
      tags:
        - Security
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security'
          application/xml:
            schema:
              $ref: '#/components/schemas/Security'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Security'
        required: true
